@using System.Globalization
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model RoomFinder.ViewModels.RoomViewModel

@{
    ViewData["Title"] = "Create Room";
    Layout = "_Login";
    var lat = Model?.Latitude?.ToString(CultureInfo.InvariantCulture);
    var lng = Model?.Longitude?.ToString(CultureInfo.InvariantCulture);
    var zoom = (Model?.Latitude.HasValue == true && Model?.Longitude.HasValue == true) ? "14" : "7";
}

<div class="container my-2">
    <div class="row justify-content-center">
        <div class="col-lg-20">
            <div class="card shadow">
                <div class="card-header bg-primary text-white">
                    <h4 class="mb-0">Create New Property</h4>
                </div>
                <div class="card-body">
                    <form asp-action="Create" method="post" enctype="multipart/form-data">
                        <div class="row">
                            <!-- Left Column - Property Details -->
                            <div class="col-md-6">
                                <div class="form-group mb-3">
                                    <label asp-for="PropertyType" class="form-label fw-bold"></label>
                                    <select asp-for="PropertyType" asp-items="Model.PropertyTypes" class="form-select">
                                        <option value="">-- Select Property Type --</option>
                                    </select>
                                    <span asp-validation-for="PropertyType" class="text-danger small"></span>
                                </div>

                                <div class="form-group mb-3">
                                    <label asp-for="Name" class="form-label fw-bold"></label>
                                    <input asp-for="Name" class="form-control" placeholder="Property name"/>
                                    <span asp-validation-for="Name" class="text-danger small"></span>
                                </div>

                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="form-group mb-3">
                                            <label asp-for="Capacity" class="form-label fw-bold"></label>
                                            <input asp-for="Capacity" class="form-control" placeholder="Guest capacity"/>
                                            <span asp-validation-for="Capacity" class="text-danger small"></span>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group mb-3">
                                            <label asp-for="Price" class="form-label fw-bold"></label>
                                            <div class="input-group">
                                                <span class="input-group-text">$</span>
                                                <input asp-for="Price" class="form-control" placeholder="0.00"/>
                                            </div>
                                            <span asp-validation-for="Price" class="text-danger small"></span>
                                        </div>
                                    </div>
                                </div>

                                <div class="form-group mb-3">
                                    <label asp-for="PhoneNumber" class="form-label fw-bold"></label>
                                    <input asp-for="PhoneNumber" class="form-control" placeholder="Contact number"/>
                                    <span asp-validation-for="PhoneNumber" class="text-danger small"></span>
                                </div>

                                <div class="form-group mb-3">
                                    <div class="form-check form-switch">
                                        <input asp-for="IsAvailable" class="form-check-input" type="checkbox" role="switch"/>
                                        <label asp-for="IsAvailable" class="form-check-label fw-bold"></label>
                                    </div>
                                    <span asp-validation-for="IsAvailable" class="text-danger small"></span>
                                </div>
                            </div>

                            <!-- Right Column - Location & Description -->
                            <div class="col-md-6">
                                <div class="form-group mb-3">
                                    <label asp-for="Location" class="form-label fw-bold"></label>
                                    <input asp-for="Location" class="form-control" placeholder="Property address"/>
                                    <span asp-validation-for="Location" class="text-danger small"></span>
                                </div>

                                <div class="form-group mb-3">
                                    <label asp-for="Description" class="form-label fw-bold"></label>
                                    <textarea asp-for="Description" class="form-control" rows="4" placeholder="Property description"></textarea>
                                    <span asp-validation-for="Description" class="text-danger small"></span>
                                </div>

                                <div class="form-group mb-3">
                                    <label asp-for="ImageFile" class="form-label fw-bold"></label>
                                    <input asp-for="ImageFile" type="file" class="form-control"/>
                                    <span asp-validation-for="ImageFile" class="text-danger small"></span>
                                </div>

                                <!-- Map container -->
                                <div class="mb-3">
                                    <label class="form-label fw-bold">Property Location Map</label>
                                    <div id="map" class="border rounded" style="height: 200px;"></div>
                                </div>

                                <!-- Hidden inputs for lat/lng -->
                                <input asp-for="Latitude" type="hidden"/>
                                <input asp-for="Longitude" type="hidden"/>
                            </div>
                        </div>

                        <div class="d-grid gap-2 d-md-flex justify-content-md-end mt-4">
                            <button type="submit" class="btn btn-primary px-4">Create Property</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
    <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>

    <script>
        var defaultLat = parseFloat("@lat") || 28.3949; // Nepal latitude fallback
        var defaultLng = parseFloat("@lng") || 84.1240; // Nepal longitude fallback
        var defaultZoom = parseInt("@zoom") || 7;

        var map = L.map('map').setView([defaultLat, defaultLng], defaultZoom);

        L.tileLayer('https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}{r}.png', {
            attribution: '&copy; <a href="https://www.openstreetmap.org/">OSM</a> contributors &copy; <a href="https://carto.com/">CARTO</a>',
            subdomains: 'abcd',
            maxZoom: 19
        }).addTo(map);

        var marker;

        if (!isNaN(defaultLat) && !isNaN(defaultLng)) {
            marker = L.marker([defaultLat, defaultLng]).addTo(map);
        }

        map.on('click', function (e) {
            if (marker) {
                map.removeLayer(marker);
            }
            marker = L.marker(e.latlng).addTo(map);

            document.querySelector('[name="Latitude"]').value = e.latlng.lat.toFixed(6);
            document.querySelector('[name="Longitude"]').value = e.latlng.lng.toFixed(6);
        });

        // Geolocation to center map if lat/lng empty
        if ((isNaN(parseFloat("@lat")) || isNaN(parseFloat("@lng"))) && navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(function (pos) {
                var userLat = pos.coords.latitude;
                var userLng = pos.coords.longitude;

                map.setView([userLat, userLng], 14);

                if (marker) {
                    map.removeLayer(marker);
                }
                marker = L.marker([userLat, userLng]).addTo(map);
                document.querySelector('[name="Latitude"]').value = userLat.toFixed(6);
                document.querySelector('[name="Longitude"]').value = userLng.toFixed(6);
            });
        }
    </script>
}
